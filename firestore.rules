
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions to check user roles from their auth token claims.
    function isSuperAdmin() {
      return request.auth.token.role == 'Super Admin';
    }

    function isAdmin() {
      return request.auth.token.role == 'Admin' || isSuperAdmin();
    }
    
    function isPartnerAdmin() {
      return request.auth.token.role == 'partner_admin';
    }
    
    function isEmployee() {
        return request.auth.token.role == 'employee';
    }

    function isUserAuthenticated() {
      return request.auth != null;
    }

    // Check if the user's partnerId claim matches the document's partnerId field.
    function isOwner(partnerId) {
      return request.auth.token.partnerId == partnerId;
    }
    
    // Admins have full access to partner data for management purposes.
    // Partner Admins can only read/update their own document.
    match /partners/{partnerId} {
      allow read: if isAdmin() || (isPartnerAdmin() && resource.id == request.auth.token.partnerId);
      allow write: if isAdmin();
      allow create, update: if isAdmin() || (isPartnerAdmin() && resource.id == request.auth.token.partnerId);
    }
    
    // User mappings are created by server-side logic (Genkit flows).
    // Client-side access should be locked down to prevent enumeration of user data.
    match /userMappings/{email} {
        allow read: if isUserAuthenticated(); // Required for login flow to find tenant.
        allow create, update, delete: if false; // Only server-side logic can modify.
    }

    // Workflow templates are managed by Admins.
    // Partners and Employees can read them to instantiate their own workflows.
    match /workflowTemplates/{templateId} {
        allow read: if isUserAuthenticated();
        allow write: if isAdmin();
    }
    
    // Partner-specific workflow instances.
    // Admins can manage all instances. Partners can manage their own.
    match /workflowInstances/{instanceId} {
        allow read: if isAdmin() || isOwner(resource.data.partnerId);
        allow write: if isAdmin() || isOwner(resource.data.partnerId);
    }
    
    // Tasks are specific to a partner workspace.
    match /tasks/{taskId} {
        allow read, write: if isAdmin() || isOwner(resource.data.partnerId);
    }

    // Team members are managed by their respective Partner Admins.
    match /teamMembers/{memberId} {
        allow read: if isAdmin() || isOwner(resource.data.partnerId);
        allow write: if isPartnerAdmin() && isOwner(resource.data.partnerId);
    }
    
    // Default deny all other collections
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
