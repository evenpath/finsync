rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if the user is a member of the workspace
    function isWorkspaceMember(partnerId) {
      return request.auth != null && (
        request.auth.token.partnerId == partnerId || 
        (request.auth.token.partnerIds != null && partnerId in request.auth.token.partnerIds)
      );
    }
    
    // Helper function to check if the user is an admin of the workspace
    function isWorkspaceAdmin(partnerId) {
      return isWorkspaceMember(partnerId) && request.auth.token.role == 'partner_admin';
    }

    // Allow public read for user mappings for login flow
    match /userMappings/{identifier} {
      allow read: if true;
      allow write: if false; // Only backend can write
    }

    // Partners can be read by their members, but only written by backend/admins
    match /partners/{partnerId} {
      allow read: if isWorkspaceMember(partnerId);
      allow write: if false; // Managed by backend flows
    }

    // Team members can be read by others in the same partner, written by admins
    match /teamMembers/{userId} {
      allow read: if isWorkspaceMember(resource.data.partnerId);
      // Allow creation by admins, allow updates by self or admins
      allow write: if isWorkspaceAdmin(request.resource.data.partnerId) || (request.auth.uid == userId);
    }

    // Tasks can be read by partner members, written by admins, or updated by the assignee
    match /tasks/{taskId} {
      allow read: if isWorkspaceMember(resource.data.partnerId);
      allow create: if isWorkspaceAdmin(request.resource.data.partnerId);
      allow update: if isWorkspaceAdmin(resource.data.partnerId) || request.auth.uid == resource.data.assignee;
      allow delete: if isWorkspaceAdmin(resource.data.partnerId);
    }
    
    // Employee/user-specific collections
    match /userWorkspaceLinks/{linkId} {
      allow read, write: if request.auth.uid == linkId.split('_')[0]; // User can manage their own links
    }
    
    match /userWorkspaceContexts/{userId} {
      allow read, write: if request.auth.uid == userId;
    }

    // Admin-only collections (for safety)
    match /adminUsers/{userId} {
        allow read, write: if request.auth.token.role == 'Super Admin';
    }
    
    match /invitationCodes/{codeId} {
        allow read, write: if isWorkspaceAdmin(resource.data.partnerId);
    }
    
    match /auditLogs/{logId} {
        allow read: if isWorkspaceMember(resource.data.partnerId);
        allow write: if false; // Only backend
    }
    
    // Default deny all other collections
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
